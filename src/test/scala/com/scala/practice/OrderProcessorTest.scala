package com.scala.practice

import com.scala.practice.data.Customer
import org.scalatest.{FunSuite, Matchers}

class OrderProcessorTest extends FunSuite with Matchers {

  val c1 = Customer("fn1", "ln1", "email1", "p1", 100, 1, "US")
  val c2 = Customer("fn2", "ln2", "email2", "p2", 200, 9, "US")
  val c3 = Customer("fn2", "ln2", "email1", "p1", 100, 7, "UK")
  val c4 = Customer("fn1", "ln1", "email2", "p2", 200, 5, "UK")
  val customers = Array(c1, c2, c3, c4)

  test("Group all products and number of items sold") {
    val res = OrderProcessor.mapProductsToNumOfItems(customers)
    res("p1") shouldBe 8
    res("p2") shouldBe 14
  }

  test("Group all products by total revenue generated") {
    val res = OrderProcessor.mapProductsToTotalRevenue(customers)
    res("p1") shouldBe 800
    res("p2") shouldBe 2800
  }

  test("Group total revenue generated by country") {
    val res = OrderProcessor.mapCountryToTotalRevenue(customers)
    res("UK") shouldBe 1700
    res("US") shouldBe 1900
  }

  test("Group revenue generated by customer") {
    val res = OrderProcessor.mapCustomerToTotalRevenue(customers)
    res("fn1 ln1") shouldBe 1100
    res("fn2 ln2") shouldBe 2500
  }


}
